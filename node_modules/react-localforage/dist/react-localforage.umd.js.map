{"version":3,"sources":["../node_modules/localforage/dist/localforage.js","../src/index.js"],"names":["f","module","exports","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","global","nextTick","draining","oldQueue","len","queue","immediate","task","push","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","called","observer","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","this","self","window","2","INTERNAL","Promise","resolver","TypeError","state","PENDING","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","handlers","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","prototype","toString","values","Array","resolved","resolveFromAll","outValue","error","race","response","REJECTED","FULFILLED","constructor","3","4","_classCallCheck","instance","Constructor","createBlob","parts","properties","Blob","name","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","executeCallback","callback","executeTwoCallbacks","errorCallback","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","idb","Promise$1","txn","transaction","DETECT_BLOB_SUPPORT_STORE","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupport","supportsBlobs","_deferReadiness","dbInfo","dbContext","dbContexts","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_getConnection","upgradeNeeded","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","console","warn","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_initStorage","options","ignoreErrors","forages","ready","initPromises","j","forage","slice","_defaultConfig","k","getItem","key","String","store","req","get","undefined","iterate","iterator","openCursor","iterationNumber","cursor","setItem","blobSupport","err","removeItem","clear","count","advanced","advance","keys","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","BASE_CHARS","indexOf","bufferToString","base64String","substring","serialize","valueType","toString$1","marker","SERIALIZED_MARKER","TYPE_ARRAYBUFFER","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_UINT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","fileReader","onload","str","BLOB_TYPE_PREFIX","TYPE_BLOB","readAsArrayBuffer","JSON","stringify","deserialize","SERIALIZED_MARKER_LENGTH","parse","blobType","TYPE_SERIALIZED_MARKER_LENGTH","BLOB_TYPE_PREFIX_REGEX","test","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","_initStorage$1","dbInfoPromise","openDatabase","description","size","executeSql","serializer","localforageSerializer","getItem$1","results","rows","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","_initStorage$2","keyPrefix","clear$2","localStorage","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","length$2","removeItem$2","setItem$2","callWhenReady","localForageInstance","libraryMethod","_args","extend","arg","hasOwnProperty","isArray","isLibraryDriver","driverName","driver","DriverType","_typeof","Symbol","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","asyncStorage","_driver","webSQLStorage","localStorageWrapper","CustomDrivers","INDEXEDDB","LOCALSTORAGE","WEBSQL","DefaultDriverOrder","LibraryMethods","DefaultConfig","driverSupport","isSafari","platform","hasFetch","fetch","IDBKeyRange","LocalForage","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","config","replace","defineDriver","driverObject","complianceError","namingError","customDriverMethods","concat","customDriverMethod","supportPromise","_support","supportResult","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","supportedDrivers","driverPromiseLoop","currentDriverIndex","_getSupportedDrivers","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","Forage","GetItem","_React$Component","props","getValue","setState","inProgress","_this","itemKey","willUnmount","componentWillMount","lazy","componentWillUnmount","render","React","Component","propTypes","PropTypes","string","bool","defaultProps","SetItem","_temp","_React$Component2","setValue","componentWillReceiveProps","nextProps","log","_initialiseProps","itemValue","_this3","any"],"mappings":"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","file":"react-localforage.umd.js","sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.5.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {}\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage && localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs;\nvar dbContexts;\nvar toString = Object.prototype.toString;\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, 'readwrite');\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve) {\n        deferredOperation.resolve = resolve;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + ' can\\'t be downgraded from version ' + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Initialize a singleton container for all running localForages.\n    if (!dbContexts) {\n        dbContexts = {};\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = {\n            // Running localForages sharing a database.\n            forages: [],\n            // Shared database.\n            db: null,\n            // Database readiness (promise).\n            dbReady: null,\n            // Deferred operations on the database.\n            deferredOperations: []\n        };\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.get(key);\n\n            req.onsuccess = function () {\n                var value = req.result;\n                if (value === undefined) {\n                    value = null;\n                }\n                if (_isEncodedBlob(value)) {\n                    value = _decodeBlob(value);\n                }\n                resolve(value);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var iterationNumber = 1;\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (cursor) {\n                    var value = cursor.value;\n                    if (_isEncodedBlob(value)) {\n                        value = _decodeBlob(value);\n                    }\n                    var result = iterator(value, cursor.key, iterationNumber++);\n\n                    if (result !== void 0) {\n                        resolve(result);\n                    } else {\n                        cursor[\"continue\"]();\n                    }\n                } else {\n                    resolve();\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.put(value, key);\n\n            // The reason we don't _save_ null is because IE 10 does\n            // not support saving the `null` type in IndexedDB. How\n            // ironic, given the bug below!\n            // See: https://github.com/mozilla/localForage/issues/161\n            if (value === null) {\n                value = undefined;\n            }\n\n            transaction.oncomplete = function () {\n                // Cast to undefined so the value passed to\n                // callback/promise is the same as what one would get out\n                // of `getItem()` later. This leads to some weirdness\n                // (setItem('foo', undefined) will return `null`), but\n                // it's not my fault localStorage is our baseline and that\n                // it's weird.\n                if (value === undefined) {\n                    value = null;\n                }\n\n                resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n\n            // We use a Grunt task to make this safe for IE and some\n            // versions of Android (including those used by Cordova).\n            // Normally IE won't like `.delete()` and will insist on\n            // using `['delete']()`, but we have a build step that\n            // fixes this for us now.\n            var req = store[\"delete\"](key);\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onerror = function () {\n                reject(req.error);\n            };\n\n            // The request will be also be aborted if we've exceeded our storage\n            // space.\n            transaction.onabort = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            var store = transaction.objectStore(dbInfo.storeName);\n            var req = store.clear();\n\n            transaction.oncomplete = function () {\n                resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function () {\n                var err = req.error ? req.error : req.transaction.error;\n                reject(err);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n            var req = store.count();\n\n            req.onsuccess = function () {\n                resolve(req.result);\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var advanced = false;\n            var req = store.openCursor();\n            req.onsuccess = function () {\n                var cursor = req.result;\n                if (!cursor) {\n                    // this means there weren't enough keys\n                    resolve(null);\n\n                    return;\n                }\n\n                if (n === 0) {\n                    // We have the first key, return it if that's what they\n                    // wanted.\n                    resolve(cursor.key);\n                } else {\n                    if (!advanced) {\n                        // Otherwise, ask the cursor to skip ahead n\n                        // records.\n                        advanced = true;\n                        cursor.advance(n);\n                    } else {\n                        // When we get here, we've got the nth key.\n                        resolve(cursor.key);\n                    }\n                }\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly').objectStore(dbInfo.storeName);\n\n            var req = store.openCursor();\n            var keys = [];\n\n            req.onsuccess = function () {\n                var cursor = req.result;\n\n                if (!cursor) {\n                    resolve(keys);\n                    return;\n                }\n\n                keys.push(cursor.key);\n                cursor[\"continue\"]();\n            };\n\n            req.onerror = function () {\n                reject(req.error);\n            };\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys\n};\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        });\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.storeName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n\n                    resolve(result);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                t.executeSql('SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1\n};\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = dbInfo.name + '/';\n\n    if (dbInfo.storeName !== self._defaultConfig.storeName) {\n        dbInfo.keyPrefix += dbInfo.storeName + '/';\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    // Default API, from Gaia/localStorage.\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2\n};\n\n// Custom drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar CustomDrivers = {};\n\nvar DriverType = {\n    INDEXEDDB: 'asyncStorage',\n    LOCALSTORAGE: 'localStorageWrapper',\n    WEBSQL: 'webSQLStorage'\n};\n\nvar DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'];\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nvar driverSupport = {};\n// Check to see if IndexedDB is available and if it is the latest\n// implementation; it's our preferred backend library. We use \"_spec_test\"\n// as the name of the database because it's not the one we'll operate on,\n// but it's useful to make sure its using the right spec.\n// See: https://github.com/mozilla/localForage/issues/128\ndriverSupport[DriverType.INDEXEDDB] = isIndexedDBValid();\n\ndriverSupport[DriverType.WEBSQL] = isWebSQLValid();\n\ndriverSupport[DriverType.LOCALSTORAGE] = isLocalStorageValid();\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var key in arg) {\n                if (arg.hasOwnProperty(key)) {\n                    if (isArray(arg[key])) {\n                        arguments[0][key] = arg[key].slice();\n                    } else {\n                        arguments[0][key] = arg[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nfunction isLibraryDriver(driverName) {\n    for (var driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n                var namingError = new Error('Custom driver name already in use: ' + driverObject._driver);\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n                if (isLibraryDriver(driverObject._driver)) {\n                    reject(namingError);\n                    return;\n                }\n\n                var customDriverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0; i < customDriverMethods.length; i++) {\n                    var customDriverMethod = customDriverMethods[i];\n                    if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var supportPromise = Promise$1.resolve(true);\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        supportPromise = driverObject._support();\n                    } else {\n                        supportPromise = Promise$1.resolve(!!driverObject._support);\n                    }\n                }\n\n                supportPromise.then(function (supportResult) {\n                    driverSupport[driverName] = supportResult;\n                    CustomDrivers[driverName] = driverObject;\n                    resolve();\n                }, reject);\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var self = this;\n        var getDriverPromise = Promise$1.resolve().then(function () {\n            if (isLibraryDriver(driverName)) {\n                switch (driverName) {\n                    case self.INDEXEDDB:\n                        return asyncStorage;\n                    case self.LOCALSTORAGE:\n                        return localStorageWrapper;\n                    case self.WEBSQL:\n                        return webSQLStorage;\n                }\n            } else if (CustomDrivers[driverName]) {\n                return CustomDrivers[driverName];\n            } else {\n                throw new Error('Driver not found.');\n            }\n        });\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!driverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0; i < LibraryMethods.length; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});","import React from 'react'\nimport PropTypes from 'prop-types'\nimport localforage from 'localforage'\n\nconst Forage = {}\n\nForage.GetItem = class GetItem extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      inProgress: false,\n      value: undefined,\n      error: undefined\n    }\n  }\n\n  componentWillMount () {\n    if (typeof window !== 'object') {\n      return\n    }\n\n    if (this.props.lazy) {\n      return\n    }\n\n    this.getValue()\n  }\n\n  componentWillUnmount () {\n    this.willUnmount = true\n  }\n\n  getValue = () => {\n    this.setState({ inProgress: true })\n    localforage.getItem(this.props.itemKey, (err, value) => {\n      if (this.willUnmount) return\n\n      this.setState(() => ({ value, error: err, inProgress: false }))\n    })\n  }\n\n  render () {\n    if (!this.props.render) {\n      return null\n    }\n    return (\n      this.props.render({\n        getValue: this.getValue,\n        inProgress: this.state.inProgress,\n        value: this.state.value,\n        error: this.state.error\n      }) || null\n    )\n  }\n}\n\nForage.GetItem.propTypes = {\n  itemKey: PropTypes.string,\n  // Do not call getValue on mount\n  lazy: PropTypes.bool,\n  render: PropTypes.func\n}\n\nForage.GetItem.defaultProps = {\n  lazy: false\n}\n\nForage.SetItem = class SetItem extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      inProgress: false,\n      value: undefined,\n      error: undefined\n    }\n  }\n\n  componentWillMount () {\n    if (typeof window !== 'object') {\n      return\n    }\n\n    if (this.props.lazy) {\n      return\n    }\n\n    this.setValue(this.props)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.value !==\n      nextProps.value ||\n      this.props.itemKey !==\n      nextProps.itemKey) {\n      console.log('setting new value')\n      this.setValue(nextProps)\n    }\n  }\n\n  componentWillUnmount () {\n    this.willUnmount = true\n  }\n\n  setValue = (props) => {\n    this.setState({ inProgress: true })\n    localforage.setItem(props.itemKey, props.itemValue, (err, value) => {\n      if (this.willUnmount) return\n\n      this.setState(() => ({ value, error: err, inProgress: false }))\n    })\n  }\n\n  render () {\n    if (!this.props.render) {\n      return null\n    }\n    return (\n      this.props.render({\n        setValue: this.setValue,\n        inProgress: this.state.inProgress,\n        value: this.state.value,\n        error: this.state.error\n      }) || null\n    )\n  }\n}\n\nexport default Forage\n\nForage.SetItem.propTypes = {\n  itemKey: PropTypes.string,\n  itemValue: PropTypes.any,\n  // Do not call getValue on mount\n  lazy: PropTypes.bool,\n  render: PropTypes.func\n}\n\nForage.SetItem.defaultProps = {\n  lazy: false\n}\n"]}